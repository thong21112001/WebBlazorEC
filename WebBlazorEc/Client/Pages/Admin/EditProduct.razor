@page "/admin/product"
@page "/admin/product/{productId:int}"
@inject IProductService ProductService
@inject IProductTypeService ProductTypeService
@inject ICategoryService CategoryService
@inject NavigationManager NavigationManager

@if (loading)
{
    <span>@msg</span>
}
else
{
    if (_product.Editing)
    {
        <h3>Edit "@_product.Title"</h3>
    }
    else if (_product.IsNew)
    {
        <h3>Create a new Product</h3>
    }

    <EditForm Model="_product" OnValidSubmit="AddOrUpdateProduct">
        <DataAnnotationsValidator></DataAnnotationsValidator>

        <div class="mb-0">
            <label for="title">Title</label>
            <InputText id="title" @bind-Value="@_product.Title" class="form-control"></InputText>
        </div>

        <div class="mb-0">
            <label for="imageUrl">Image Url</label>
            <InputText id="imageUrl" @bind-Value="@_product.ImageUrl" class="form-control"></InputText>
        </div>

        <div class="mb-0">
            <img src="@_product.ImageUrl" />
        </div>

        <div class="mb-0">
            <label for="description">Description</label>
            <InputTextArea id="description" @bind-Value="@_product.Description" class="form-control"></InputTextArea>
        </div>

        <hr />

        <div class="header">
            <div class="col">Product Type / Variant</div>
            <div class="col">Price</div>
            <div class="col">Original Price</div>
            <div class="col">Visible</div>
            <div class="col">Function</div>
        </div>
        @foreach (var variant in _product.ProductVariants)
        {
            <div class="row">
                <div class="col">
                    <InputSelect disabled="@variant.Deleted" @bind-Value="variant.ProductTypeId" class="form-control">
                        @foreach (var productType in ProductTypeService.ProductTypes)
                        {
                            <option value="@productType.Id.ToString()">@productType.Name</option>
                        }
                    </InputSelect>
                </div>
            </div>

            <div class="col">
                <InputNumber @bind-Value="@variant.Price" class="form-control" disabled="@variant.Deleted"></InputNumber>
            </div>

            <div class="col">
                <InputNumber @bind-Value="@variant.OriginalPrice" class="form-control" disabled="@variant.Deleted"></InputNumber>
            </div>

            <div class="col col-visible">
                <InputCheckbox @bind-Value="@variant.Visible" style="transform: scale(2,2);" disabled="@variant.Deleted"></InputCheckbox>
            </div>

            <div class="col">
                <button @onclick="@(() => RemoveProductVariant(variant.ProductTypeId))" class="btn btn-primary" disabled="@variant.Deleted">
                    <i class="oi oi-trash"></i>
                </button>
            </div>
        }

        <button class="btn btn-primary" @onclick="AddProductVariant">
            <i class="oi oi-plus"></i> Add product variant
        </button>

        <hr />

        <div class="mb-0">
            <label for="category">Category</label>
            <InputSelect id="category" @bind-Value="_product.CategoryId" class="form-control">
                @foreach (var cate in CategoryService.AdminCategories)
                {
                    <option value="@cate.Id">
                        @cate.Name
                    </option>
                }
            </InputSelect>
        </div>

        <hr />

        <div class="form-check">
            <InputCheckbox id="featured" @bind-Value="_product.Featured" class="form-check-input"></InputCheckbox>
            <label for="featured" class="form-check-label">Featured</label>
        </div>

        <div class="form-check">
            <InputCheckbox id="visible" @bind-Value="_product.Visible" class="form-check-input"></InputCheckbox>
            <label for="visible" class="form-check-label">Visible</label>
        </div>

        <hr />
        <button type="submit" class="btn btn-primary float-end">
            @btnText
        </button>
        
        <ValidationSummary></ValidationSummary>
    </EditForm>
}


@code {
    [Parameter]
    public int productId { get; set; }

    Product _product = new Product();
    bool loading = true;
    string btnText = "";
    string msg = "Loading ...";

    protected override async Task OnInitializedAsync()
    {
        await ProductTypeService.GetProductTypeAsync();
        await CategoryService.GetAdminCategories();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (productId == 0)
        {
            _product = new Product { IsNew = true };
            btnText = "Create Product";
        }
        else
        {
            Product dbProduct = (await ProductService.GetProductAsync(productId)).Data;
            if (dbProduct == null)
            {
                msg = $"Product with id '{productId}' does not exist!";
                return;
            }
            _product = dbProduct;
            _product.Editing = true;
            btnText = "Update Product";
        }
        loading = false;
    }

    void RemoveProductVariant(int productTypeId)
    {
        var prodVariant = _product.ProductVariants.Find(pv => pv.ProductTypeId == productTypeId);
        if (prodVariant == null)
        {
            return;
        }
        if (prodVariant.IsNew)
        {
            _product.ProductVariants.Remove(prodVariant);
        }
        else
        {
            prodVariant.Deleted = true;
        }
    }

    void AddProductVariant()
    {
        _product.ProductVariants.Add(new ProductVariant { IsNew = true, ProductId = _product.Id });
    }

    async void AddOrUpdateProduct()
    {
        if (_product.IsNew)
        {
            var result = await ProductService.CreateProduct(_product);
            NavigationManager.NavigateTo($"admin/product/{result.Id}");
        }else
        {
            _product.IsNew = false;
            _product = await ProductService.UpdateProduct(_product);
            NavigationManager.NavigateTo($"admin/product/{_product.Id}", true);
        }
    }
}
