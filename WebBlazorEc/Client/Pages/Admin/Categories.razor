@page "/admin/categories"
@inject ICategoryService CategoryService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<h3>Categories</h3>

<div class="header">
    <div class="col">Name</div>
    <div class="col">Url</div>
    <div class="col">Visible</div>
    <div class="col"></div>
</div>

@if (CategoryService != null && CategoryService.AdminCategories != null)
{
    foreach (var cate in CategoryService.AdminCategories)
    {
        if (cate.Editing)
        {
            <EditForm Model="editCate" OnSubmit="UpdateCategory">
                <div class="row">
                    <div class="col">
                        <InputText @bind-Value="editCate.Name" class="form-control"></InputText>
                    </div>
                    <div class="col">
                        <InputText @bind-Value="editCate.Url" class="form-control"></InputText>
                    </div>
                    <div class="col col-visible">
                        <InputCheckbox @bind-Value="editCate.Visible" style="transform: scale(2,2);"></InputCheckbox>
                    </div>
                    <div class="col">
                        <button type="submit" class="btn btn-primary">
                            <i class="oi oi-cloud-upload"></i>
                        </button>
                        <button @onclick="CancelEditing" class="btn btn-primary">
                            <i class="oi oi-circle-x"></i>
                        </button>
                    </div>
                </div>
            </EditForm>
        }
        else
        {
            <div class="row">
                <div class="col">
                    @cate.Name
                </div>
                <div class="col">
                    @cate.Url
                </div>
                <div class="col col-visible">
                    <span>
                        @(@cate.Visible ? "✔️" : "❌")
                    </span>
                </div>
                <div class="col">
                    <button @onclick="(() => EditCategory(cate))" class="btn btn-primary">
                        <i class="oi oi-pencil"></i>
                    </button>
                    <button @onclick="(() => DeleteCategory(cate.Id))" class="btn btn-primary">
                        <i class="oi oi-trash"></i>
                    </button>
                </div>
            </div>
        }

    }

    <button class="btn btn-primary" @onclick="CreateNewCategory">
        <i class="oi oi-plus"></i> Add new Category
    </button>
}
else
{
    <span>BUG =))</span>
}


@code {
    Category? editCate = null;

    protected async override Task OnInitializedAsync()
    {
        await CategoryService.GetAdminCategories();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        editCate = CategoryService.CreateNewCategory();
    }

    private void EditCategory(Category cate)
    {
        cate.Editing = true;
        editCate = cate;
    }

    private async Task UpdateCategory()
    {
        if (editCate.IsNew)
        {
            await CategoryService.AddCategory(editCate);
        }
        else
        {
            await CategoryService.UpdateCategory(editCate);
        }

        editCate = new Category();
    }

    private async Task CancelEditing()
    {
        editCate = new Category();
        await CategoryService.GetAdminCategories();
    }

    private async Task DeleteCategory(int id)
    {
        await CategoryService.DeleteCategory(id);
    }
}
