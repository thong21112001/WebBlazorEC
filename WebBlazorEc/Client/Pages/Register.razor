@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="userR" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="userR.Email" class="form-control"/>
        <ValidationMessage For="@(() => userR.Email)"/>
    </div>

    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="userR.Password" class="form-control" type="password"/>
        <ValidationMessage For="@(() => userR.Password)" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="userR.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For="@(() => userR.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">
        Register
    </button>

    <div class="@messageCssClass">
        <span>@message</span>
    </div>
</EditForm>

@code {
    UserRegister userR = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        var result = await AuthService.RegisterUser(userR);
        message = result.Message;
        if (result.Success)
        {
            messageCssClass = "text-success";
        }
        else
        {
            messageCssClass = "text-danger";
        }
    }

}
